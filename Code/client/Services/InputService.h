#pragma once
#include <dinput.h>

struct OverlayService;

/**
 * @brief Handles input handling for the UI.
 */
struct InputService
{
    InputService(OverlayService& aOverlay) noexcept;
    ~InputService() noexcept;

    static LRESULT WndProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam);

    std::pair<TiltedPhoques::String, int32_t> GetUIKey() const noexcept { return m_uiKey; }
    bool SetUIKey(const TiltedPhoques::String& aKeyName) noexcept;
    bool SetUIKey(int32_t aKeyCode) noexcept;
    const std::pair<TiltedPhoques::String, int32_t>& GetKey(int32_t aKeyCode) const noexcept;
    const std::pair<TiltedPhoques::String, int32_t>& GetKey(const TiltedPhoques::String& acKeyName) const noexcept;
    const TiltedPhoques::Map<TiltedPhoques::String, int32_t>& GetVirtualKeys() const noexcept { return m_virtualKeys; }
    const int32_t GetDirectInputKeyCode(int32_t aVirtualKeyCode) const noexcept { return m_directInputKeys.find(aVirtualKeyCode).value(); }


    //    assumes US standard keyboard layout because that was the most documented list
    //    https://learn.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes
    const TiltedPhoques::Map<TiltedPhoques::String, int32_t> m_virtualKeys
    {
        {"A", 0x41},
        {"B", 0x42},
        {"C", 0x43},
        {"D", 0x44},
        {"E", 0x45},
        {"F", 0x46},
        {"G", 0x47},
        {"H", 0x48},
        {"I", 0x49},
        {"J", 0x4A},
        {"K", 0x4B},
        {"L", 0x4C},
        {"M", 0x4D},
        {"N", 0x4E},
        {"O", 0x4F},
        {"P", 0x50},
        {"Q", 0x51},
        {"R", 0x52},
        {"S", 0x53},
        {"T", 0x54},
        {"U", 0x55},
        {"V", 0x56},
        {"W", 0x57},
        {"X", 0x58},
        {"Y", 0x59},
        {"Z", 0x5A},
        {"0", 0x30},
        {"1", 0x31},
        {"2", 0x32},
        {"3", 0x33},
        {"4", 0x34},
        {"5", 0x35},
        {"6", 0x36},
        {"7", 0x37},
        {"8", 0x38},
        {"9", 0x39},
        {"MOUSE1", VK_LBUTTON},
        {"MOUSE2", VK_RBUTTON},
        {"MOUSE3", VK_MBUTTON},
        {"MOUSE4", VK_XBUTTON1},
        {"MOUSE5", VK_XBUTTON2},
        {"Backspace", VK_BACK},
        {"Tab", VK_TAB},
        {"Clear", VK_CLEAR},
        {"Enter", VK_RETURN},
        {"LSHIFT", VK_LSHIFT},
        {"RSHIFT", VK_RSHIFT},
        {"LCTRL", VK_LCONTROL},
        {"RCTRL", VK_RCONTROL},
        {"LALT", VK_LMENU},
        {"RALT", VK_RMENU},
        {"Pause", VK_PAUSE},
        {"Caps Lock", VK_CAPITAL},
        {"IME Kana mode", VK_KANA},
        {"IME Hangul mode", VK_HANGUL},
        {"IME On", VK_IME_ON},
        {"IME Junja mode", VK_JUNJA},
        {"IME final mode", VK_FINAL},
        {"IME Hanja mode", VK_HANJA},
        {"IME Kanji mode", VK_KANJI},
        {"IME Off", VK_IME_OFF},
        {"Esc", VK_ESCAPE},
        {"IME convert", VK_CONVERT},
        {"IME nonconvert", VK_NONCONVERT},
        {"IME accept", VK_ACCEPT},
        {"IME mode change request", VK_MODECHANGE},
        {"Space", VK_SPACE},
        {"Page Up", VK_PRIOR},
        {"Page Down", VK_NEXT},
        {"End", VK_END},
        {"Home", VK_HOME},
        {"Left Arrow", VK_LEFT},
        {"Up Arrow", VK_UP},
        {"Right Arrow", VK_RIGHT},
        {"Down Arrow", VK_DOWN},
        {"Select", VK_SELECT},
        {"Print", VK_PRINT},
        {"Execute", VK_EXECUTE},
        {"PrtSc", VK_SNAPSHOT},
        {"Insert", VK_INSERT},
        {"Delete", VK_DELETE},
        {"Help", VK_HELP},
        {"LWIN", VK_LWIN},
        {"RWIN", VK_RWIN},
        {"Applications", VK_APPS},
        {"Sleep", VK_SLEEP},
        {"NUMPAD0", VK_NUMPAD0},
        {"NUMPAD1", VK_NUMPAD1},
        {"NUMPAD2", VK_NUMPAD2},
        {"NUMPAD3", VK_NUMPAD3},
        {"NUMPAD4", VK_NUMPAD4},
        {"NUMPAD5", VK_NUMPAD5},
        {"NUMPAD6", VK_NUMPAD6},
        {"NUMPAD7", VK_NUMPAD7},
        {"NUMPAD8", VK_NUMPAD8},
        {"NUMPAD9", VK_NUMPAD9},
        {"*", VK_MULTIPLY},
        {"Add", VK_ADD},
        {"Separator", VK_SEPARATOR},
        {"Subtract", VK_SUBTRACT},
        {"Decimal", VK_DECIMAL},
        {"Divide", VK_DIVIDE},
        {"F1", VK_F1},
        {"F2", VK_F2},
        {"F3", VK_F3},
        {"F4", VK_F4},
        {"F5", VK_F5},
        {"F6", VK_F6},
        {"F7", VK_F7},
        {"F8", VK_F8},
        {"F9", VK_F9},
        {"F10", VK_F10},
        {"F11", VK_F11},
        {"F12", VK_F12},
        {"F13", VK_F13},
        {"F14", VK_F14},
        {"F15", VK_F15},
        {"F16", VK_F16},
        {"F17", VK_F17},
        {"F18", VK_F18},
        {"F19", VK_F19},
        {"F20", VK_F20},
        {"F21", VK_F21},
        {"F22", VK_F22},
        {"F23", VK_F23},
        {"F24", VK_F24},
        {"Num Lock", VK_NUMLOCK},
        {"Scroll Lock", VK_SCROLL},
        {"Browser Back", VK_BROWSER_BACK},
        {"Browser Forward", VK_BROWSER_FORWARD},
        {"Browser Refresh", VK_BROWSER_REFRESH},
        {"Browser Stop", VK_BROWSER_STOP},
        {"Browser Search", VK_BROWSER_SEARCH},
        {"Browser Favorites", VK_BROWSER_FAVORITES},
        {"Browser Stard and Home", VK_BROWSER_HOME},
        {"Volume Mute", VK_VOLUME_MUTE},
        {"Volume Down", VK_VOLUME_DOWN},
        {"Volume Up", VK_VOLUME_UP},
        {"Next Track", VK_MEDIA_NEXT_TRACK},
        {"Previous Track", VK_MEDIA_PREV_TRACK},
        {"Stop Media", VK_MEDIA_STOP},
        {"Play/Pause Media", VK_MEDIA_PLAY_PAUSE},
        {"Start Mail", VK_LAUNCH_MAIL},
        {"Select Media", VK_LAUNCH_MEDIA_SELECT},
        {"Start Application 1", VK_LAUNCH_APP1},
        {"Start Application 2", VK_LAUNCH_APP2},
        {"=", VK_OEM_PLUS}, // <-- EQUALS????
        {",", VK_OEM_COMMA},
        {"-", VK_OEM_MINUS},
        {".", VK_OEM_PERIOD},
        {";", VK_OEM_1},
        {"/", VK_OEM_2},
        {"`", VK_OEM_3},
        {"[", VK_OEM_4},
        {"\\", VK_OEM_5},
        {"]", VK_OEM_6},
        {"'", VK_OEM_7},
        {"IME PROCESS", VK_PROCESSKEY},
        {"Attn", VK_ATTN},
        {"CrSel", VK_CRSEL},
        {"ExSel", VK_EXSEL},
        {"Erase EOF", VK_EREOF},
        {"Play", VK_PLAY},
        {"Zoom", VK_ZOOM},
        {"PA1", VK_PA1},
        {"Clear", VK_OEM_CLEAR}
    };

    const TiltedPhoques::Map<int32_t, int32_t> m_directInputKeys
    {
        {0x41, DIK_A},
        {0x42, DIK_B},
        {0x43, DIK_C},
        {0x44, DIK_D},
        {0x45, DIK_E},
        {0x46, DIK_F},
        {0x47, DIK_G},
        {0x48, DIK_H},
        {0x49, DIK_I},
        {0x4A, DIK_J},
        {0x4B, DIK_K},
        {0x4C, DIK_L},
        {0x4D, DIK_M},
        {0x4E, DIK_N},
        {0x4F, DIK_O},
        {0x50, DIK_P},
        {0x51, DIK_Q},
        {0x52, DIK_R},
        {0x53, DIK_S},
        {0x54, DIK_T},
        {0x55, DIK_U},
        {0x56, DIK_V},
        {0x57, DIK_W},
        {0x58, DIK_X},
        {0x59, DIK_Y},
        {0x5A, DIK_Z},
        {0x30, DIK_0},
        {0x31, DIK_1},
        {0x32, DIK_2},
        {0x33, DIK_3},
        {0x34, DIK_4},
        {0x35, DIK_5},
        {0x36, DIK_6},
        {0x37, DIK_7},
        {0x38, DIK_8},
        {0x39, DIK_9},
        {VK_LBUTTON, DIMOUSE_BUTTON0},
        {VK_RBUTTON, DIMOUSE_BUTTON1},
        {VK_MBUTTON, DIMOUSE_BUTTON2},
        {VK_XBUTTON1, DIMOUSE_BUTTON3},
        {VK_XBUTTON2, DIMOUSE_BUTTON4},
        {VK_BACK, DIK_BACK},
        {VK_TAB, DIK_TAB},
        {VK_CLEAR, VK_CLEAR},
        {VK_RETURN, DIK_RETURN},
        {VK_LSHIFT, DIK_LSHIFT},
        {VK_RSHIFT, DIK_RSHIFT},
        {VK_LCONTROL, DIK_LCONTROL},
        {VK_RCONTROL, DIK_RCONTROL},
        {VK_LMENU, DIK_LMENU},
        {VK_RMENU, DIK_RMENU},
        {VK_PAUSE, DIK_PAUSE},
        {VK_CAPITAL, DIK_CAPITAL},
        {VK_KANA, DIK_KANA},
        {VK_HANGUL, VK_HANGUL},
        {VK_IME_ON, VK_IME_ON},
        {VK_JUNJA, VK_JUNJA},
        {VK_FINAL, VK_FINAL},
        {VK_HANJA, VK_HANJA},
        {VK_KANJI, DIK_KANJI},
        {VK_IME_OFF, VK_IME_OFF},
        {VK_ESCAPE, DIK_ESCAPE},
        {VK_CONVERT, DIK_CONVERT},
        {VK_NONCONVERT, DIK_NOCONVERT},
        {VK_ACCEPT, VK_ACCEPT},
        {VK_MODECHANGE, VK_MODECHANGE},
        {VK_SPACE, DIK_SPACE},
        {VK_PRIOR, DIK_PRIOR},
        {VK_NEXT, DIK_NEXT},
        {VK_END, DIK_END},
        {VK_HOME, DIK_HOME},
        {VK_LEFT, DIK_LEFT},
        {VK_UP, DIK_UP},
        {VK_RIGHT, DIK_RIGHT},
        {VK_DOWN, DIK_DOWN},
        {VK_SELECT, VK_SELECT},
        {VK_PRINT, VK_PRINT},
        {VK_EXECUTE, VK_EXECUTE},
        {VK_SNAPSHOT, VK_SNAPSHOT},
        {VK_INSERT, DIK_INSERT},
        {VK_DELETE, DIK_DELETE},
        {VK_HELP, VK_HELP},
        {VK_LWIN, DIK_LWIN},
        {VK_RWIN, DIK_RWIN},
        {VK_APPS, DIK_APPS},
        {VK_SLEEP, DIK_SLEEP},
        {VK_NUMPAD0, DIK_NUMPAD0},
        {VK_NUMPAD1, DIK_NUMPAD1},
        {VK_NUMPAD2, DIK_NUMPAD2},
        {VK_NUMPAD3, DIK_NUMPAD3},
        {VK_NUMPAD4, DIK_NUMPAD4},
        {VK_NUMPAD5, DIK_NUMPAD5},
        {VK_NUMPAD6, DIK_NUMPAD6},
        {VK_NUMPAD7, DIK_NUMPAD7},
        {VK_NUMPAD8, DIK_NUMPAD8},
        {VK_NUMPAD9, DIK_NUMPAD9},
        {VK_MULTIPLY, DIK_MULTIPLY},
        {VK_ADD, DIK_NUMPADPLUS},
        {VK_SEPARATOR, DIK_PERIOD},
        {VK_SUBTRACT, DIK_SUBTRACT},
        {VK_DECIMAL, DIK_DECIMAL},
        {VK_DIVIDE, DIK_DIVIDE},
        {VK_F1, DIK_F1},
        {VK_F2, DIK_F2},
        {VK_F3, DIK_F3},
        {VK_F4, DIK_F4},
        {VK_F5, DIK_F5},
        {VK_F6, DIK_F6},
        {VK_F7, DIK_F7},
        {VK_F8, DIK_F8},
        {VK_F9, DIK_F9},
        {VK_F10, DIK_F10},
        {VK_F11, DIK_F11},
        {VK_F12, DIK_F12},
        {VK_F13, DIK_F13},
        {VK_F14, DIK_F14},
        {VK_F15, DIK_F15},
        {VK_F16, VK_F16},
        {VK_F17, VK_F17},
        {VK_F18, VK_F18},
        {VK_F19, VK_F19},
        {VK_F20, VK_F20},
        {VK_F21, VK_F21},
        {VK_F22, VK_F22},
        {VK_F23, VK_F23},
        {VK_F24, VK_F24},
        {VK_NUMLOCK, DIK_NUMLOCK},
        {VK_SCROLL, DIK_SCROLL},
        {VK_BROWSER_BACK, DIK_WEBBACK},
        {VK_BROWSER_FORWARD, DIK_WEBFORWARD},
        {VK_BROWSER_REFRESH, DIK_WEBREFRESH},
        {VK_BROWSER_STOP, DIK_WEBSTOP},
        {VK_BROWSER_SEARCH, DIK_WEBSEARCH},
        {VK_BROWSER_FAVORITES, DIK_WEBFAVORITES},
        {VK_BROWSER_HOME, DIK_WEBHOME},
        {VK_VOLUME_MUTE, DIK_MUTE},
        {VK_VOLUME_DOWN, DIK_VOLUMEDOWN},
        {VK_VOLUME_UP, DIK_VOLUMEUP},
        {VK_MEDIA_NEXT_TRACK, DIK_NEXTTRACK},
        {VK_MEDIA_PREV_TRACK, DIK_PREVTRACK},
        {VK_MEDIA_STOP, DIK_MEDIASTOP},
        {VK_MEDIA_PLAY_PAUSE, DIK_PLAYPAUSE},
        {VK_LAUNCH_MAIL, DIK_MAIL},
        {VK_LAUNCH_MEDIA_SELECT, DIK_MEDIASELECT},
        {VK_LAUNCH_APP1, VK_LAUNCH_APP1},
        {VK_LAUNCH_APP2, VK_LAUNCH_APP2},
        {VK_OEM_PLUS, DIK_EQUALS},
        {VK_OEM_COMMA, DIK_COMMA},
        {VK_OEM_MINUS, DIK_MINUS},
        {VK_OEM_PERIOD, DIK_PERIOD},
        {VK_OEM_1, DIK_SEMICOLON},
        {VK_OEM_2, DIK_SLASH},
        {VK_OEM_3, DIK_GRAVE},
        {VK_OEM_4, DIK_LBRACKET},
        {VK_OEM_5, DIK_BACKSLASH},
        {VK_OEM_6, DIK_RBRACKET},
        {VK_OEM_7, DIK_APOSTROPHE},
        {VK_PROCESSKEY, VK_PROCESSKEY},
        {VK_ATTN, VK_ATTN},
        {VK_CRSEL, VK_CRSEL},
        {VK_EXSEL, VK_EXSEL},
        {VK_EREOF, VK_EREOF},
        {VK_PLAY, VK_PLAY},
        {VK_ZOOM, VK_ZOOM},
        {VK_PA1, VK_PA1},
        {VK_OEM_CLEAR, VK_OEM_CLEAR}
    };

    std::pair<TiltedPhoques::String, int32_t> m_uiKey{"F2", VK_F2};

    TP_NOCOPYMOVE(InputService);
};
